{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Invest.js","webpack:///./src/app.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACLA;AAAA;AAEiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,8CAAM;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,sBAAsB,GAAG,wBAAwB,GAAG,uBAAuB;;AAE5H;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,UAAU;AAC1E,0DAA0D,YAAY;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,yDAAyD,8CAAM;AAC/D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wD","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/app.js\");\n","export class Invest {\r\n    constructor(investAmount = 0, passedTime = 0) {\r\n        this.investAmount = investAmount;\r\n        this.passedTime = passedTime\r\n    }\r\n}","import {\r\n   Invest\r\n} from './Invest'\r\n\r\nconst inputInvestAmount = document.querySelector('.changes-form__input-invest-amount')\r\nconst inputInvestTime = document.querySelector('.changes-form__input-invest-time')\r\nconst inputEuroPrice = document.querySelector('.changes-form__input-euro-price')\r\nconst inputSix = document.getElementById('six')\r\nconst inputTwelve = document.getElementById('twelve')\r\nconst startButton = document.querySelector('.changes-form--button-submit')\r\nconst inputYes = document.getElementById('yes')\r\nconst inputNo = document.getElementById('no')\r\n\r\nlet startInvestBox = new Invest()\r\nconst reInvestBoxArray = []\r\n\r\nlet dailyIncome = 0\r\nlet balance = 0\r\nlet multiplier = 0\r\nlet boxTime = 0\r\nlet euroPrice = 0\r\nlet reinvestTime = 0\r\nlet timeToEnd = 0\r\nlet weekDayIterator = 0\r\nlet totalTime = 0\r\n\r\n\r\n\r\nconst calcInvestEUR = () => {\r\n   const investAmountPLN = inputInvestAmount.value\r\n   reinvestTime = inputInvestTime.value\r\n   euroPrice = inputEuroPrice.value\r\n   startInvestBox.investAmount = investAmountPLN / euroPrice\r\n   startInvestBox.investAmount = Math.round(startInvestBox.investAmount * 100) / 100\r\n}\r\n\r\nconst calcEndInvestDay = () => {\r\n   const endTime = document.querySelector('.result-end-time')\r\n   const date = new Date()\r\n   const now = date.getTime()\r\n   const endInvestMinsec = now + totalTime * 24 * 60 * 60 * 1000\r\n   const endInvestDay = new Date(endInvestMinsec)\r\n   endTime.innerText = `Dzień wypłaty środków: ${endInvestDay.getDay()}.${endInvestDay.getMonth()}.${endInvestDay.getYear()}r.`\r\n\r\n}\r\n\r\nconst calcDailyIncome = () => {\r\n   calcInvestEUR()\r\n   if (!inputSix.checked && !inputTwelve.checked) alert('Wybierz plan inwestycyjny.')\r\n   if (inputSix.checked == true) {\r\n      multiplier = 1.3;\r\n      boxTime = 182\r\n   } else if (inputTwelve.checked == true) {\r\n      multiplier = 1.7;\r\n      boxTime = 365\r\n   }\r\n}\r\n\r\nconst showResult = () => {\r\n   const showTime = document.querySelector('.result-total-time')\r\n   const showIncome = document.querySelector('.result-total-income')\r\n\r\n   console.log(reinvestTime, timeToEnd)\r\n   const calcTotalTime = () => {\r\n      if (!reinvestTime || parseInt(reinvestTime) + timeToEnd < boxTime && !reInvestBoxArray[reInvestBoxArray.length - 1]) totalTime = boxTime\r\n      else if (parseInt(reinvestTime) + timeToEnd < boxTime && reInvestBoxArray[reInvestBoxArray.length - 1]) totalTime = boxTime + reInvestBoxArray[reInvestBoxArray.length - 1].passedTime\r\n      else totalTime = parseInt(reinvestTime) + timeToEnd\r\n   }\r\n   calcTotalTime()\r\n   calcEndInvestDay()\r\n   const totalIncome = Math.round(balance * euroPrice * 100) / 100\r\n   showTime.innerText = `Ilośc dni od rozpoczęcią inwestycji: ${totalTime}`\r\n   showIncome.innerText = `Stan konta na ostatni dzień: ${totalIncome}`\r\n}\r\n\r\nconst calcBalance = (e) => {\r\n   e.preventDefault()\r\n   calcDailyIncome()\r\n   let dailyIncomeReinvestBox = []\r\n   let time = 0\r\n   const timeCalc = () => {\r\n      if (!reinvestTime || reinvestTime < boxTime) time = boxTime\r\n      else time = reinvestTime\r\n   }\r\n   timeCalc()\r\n   for (let i = 0; i < time; i++) {\r\n      if (!reInvestBoxArray[0]) dailyIncome = startInvestBox.investAmount * multiplier / boxTime\r\n      else {\r\n         for (let i = 0; i < reInvestBoxArray.length; i++) {\r\n            dailyIncomeReinvestBox[i] = reInvestBoxArray[i].investAmount * multiplier / boxTime\r\n         }\r\n         let dailyIncomeReinvestSum = 0\r\n         dailyIncomeReinvestBox.forEach(el => {\r\n            dailyIncomeReinvestSum += el\r\n         });\r\n\r\n         dailyIncome = startInvestBox.investAmount * multiplier / boxTime + dailyIncomeReinvestSum\r\n      }\r\n      balance += dailyIncome\r\n      if (balance >= 50 && weekDayIterator == 0 && inputYes.checked && i < reinvestTime) {\r\n         reInvestBoxArray[reInvestBoxArray.length] = new Invest(balance, 0)\r\n         balance = 0\r\n         weekDayIterator = 7\r\n      }\r\n      startInvestBox.passedTime++\r\n      if (weekDayIterator != 0) weekDayIterator--\r\n      if (startInvestBox.passedTime >= boxTime) startInvestBox.investAmount = 0\r\n\r\n      reInvestBoxArray.forEach(el => {\r\n         el.passedTime++\r\n      })\r\n      reInvestBoxArray.forEach(el => {\r\n         if (el.passedTime >= boxTime) el.investAmount = 0\r\n      })\r\n   }\r\n   startInvestBox = null\r\n   console.log(dailyIncomeReinvestBox)\r\n   console.log(reInvestBoxArray, startInvestBox, balance, multiplier, boxTime, reinvestTime)\r\n   if (inputYes.checked && reInvestBoxArray[reInvestBoxArray.length - 1]) timeToEnd = boxTime - reInvestBoxArray[reInvestBoxArray.length - 1].passedTime\r\n   for (let i = 0; i < timeToEnd; i++) {\r\n      let dailyIncomeReinvestSum = 0\r\n      dailyIncomeReinvestBox.forEach(el => {\r\n         dailyIncomeReinvestSum += el\r\n      });\r\n      balance += dailyIncomeReinvestSum\r\n      reInvestBoxArray.forEach(el => {\r\n         el.passedTime++\r\n      })\r\n      for (let i = 0; i < reInvestBoxArray.length; i++) {\r\n         const el = reInvestBoxArray[i]\r\n         if (el.passedTime >= boxTime) {\r\n            el.investAmount = 0\r\n            dailyIncomeReinvestBox[i] = 0\r\n         }\r\n      }\r\n   }\r\n   showResult()\r\n}\r\n\r\nfunction reinvestDisabled() {\r\n   if (this.checked) {\r\n      inputInvestTime.setAttribute('disabled', 'disabled')\r\n      inputInvestTime.value = ''\r\n   }\r\n}\r\n\r\nfunction reinvestDisabledOut() {\r\n   if (this.checked) {\r\n      inputInvestTime.removeAttribute('disabled')\r\n   }\r\n}\r\n\r\nstartButton.addEventListener('click', calcBalance)\r\ninputNo.addEventListener('change', reinvestDisabled)\r\ninputYes.addEventListener('change', reinvestDisabledOut)"],"sourceRoot":""}